{"version":3,"file":"static/js/493.66384602.chunk.js","mappings":"kOAgDA,UA3Ca,WACX,IAAOA,GAAWC,EAAAA,EAAAA,MAAXD,QACPE,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAkB9B,OAfFG,EAAAA,EAAAA,YAAU,WACR,GAAKZ,EAAL,CAEA,IAAMa,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAgBtB,GAAS,KAAD,EAAzCkB,EAAQC,EAAAI,KACdhB,EAAYW,GACZP,EAAc,+EAA+EQ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,kCAAAA,EAAAM,OAAA,GAAAR,EAAA,kBAIhG,kBARc,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KASfd,GAXoB,CAYtB,GAAG,CAACb,KAGF4B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAAA,SAAaC,SACxBzB,EAAS0B,OAAS,EACnB1B,EAAS2B,KAAI,SAACC,GAAK,OACfN,EAAAA,EAAAA,KAAA,OAAAG,UACII,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACIH,EAAAA,EAAAA,KAAA,OAAKQ,IAAKF,EAAMG,aAAY,mCAAAC,OAAsCJ,EAAMG,cAAiB3B,EACrF6B,MAAO,IACPC,IAAI,YAERZ,EAAAA,EAAAA,KAAA,MAAAG,SAAKG,EAAMO,QACXb,EAAAA,EAAAA,KAAA,KAAAG,SAAIG,EAAMQ,gBAPRR,EAAMS,GASV,KAGVf,EAAAA,EAAAA,KAAA,KAAAG,SAAG,qBAIX,C","sources":["pages/Cast.jsx"],"sourcesContent":["import { useParams,} from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { requestCastById } from '../service/api.js';\nimport css from '../components/App.module.css'\n\nconst Cast = () => {\n  const {movieId} = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n  const [defaultImg, setDefaultImg] = useState();\n\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCast = async () => {\n      try {\n        const castFilm = await requestCastById(movieId);\n        setCastInfo(castFilm);\n        setDefaultImg('https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700');\n      } catch (error) {\n\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n    return (\n    <div className={css.listCast}>\n        {castInfo.length > 0 ? (\n        castInfo.map((actor) => (\n            <div key={actor.id}>\n                <div>\n                    <img src={actor.profile_path ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}` : defaultImg} \n                        width={150} \n                        alt=\"poster\" \n                    />\n                    <h4>{actor.name}</h4>\n                    <p>{actor.character}</p>\n                </div>\n            </div>\n        ))\n        ) : (\n        <p>No actors found</p>\n        )}\n    </div>\n    );\n};\n\nexport default Cast;\n\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","castInfo","setCastInfo","_useState3","_useState4","defaultImg","setDefaultImg","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","castFilm","_context","prev","next","requestCastById","sent","t0","stop","apply","arguments","_jsx","className","css","children","length","map","actor","_jsxs","src","profile_path","concat","width","alt","name","character","id"],"sourceRoot":""}